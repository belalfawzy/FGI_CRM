@using FGI.Enums
@model List<Lead>
@{
    ViewData["Title"] = "My Leads";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Leads Management System</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/css/sales/mylead-sales.css" asp-append-version="true">
</head>
<body>
    <div class="container">
        <!-- Header -->
        <div class="header">
            <div class="header-title">
                <h1><i class="fas fa-user-tie"></i> Leads Management</h1>
                <p>Manage all your leads in one place</p>
            </div>
            <div class="header-stats">
                <div class="stat-box">
                    <div class="stat-number">@Model.Count</div>
                    <div class="stat-label">Total</div>
                </div>
                <div class="stat-box success">
                    <div class="stat-number">@Model.Count(l => l.CurrentStatus == LeadStatusType.DoneDeal)</div>
                    <div class="stat-label">Done</div>
                </div>
                <div class="stat-box danger">
                    <div class="stat-number">@Model.Count(l => l.CurrentStatus == LeadStatusType.Canceled)</div>
                    <div class="stat-label">Canceled</div>
                </div>
            </div>
        </div>

        <!-- Filter Section -->
        <div class="filter-section">
            <div class="filter-title">
                <i class="fas fa-filter"></i>
                <h2>Filter Leads</h2>
            </div>
            <div class="filter-grid">
                <div class="filter-group">
                    <label>Status</label>
                    <select class="filter-control" id="statusFilter">
                        <option value="all">All Statuses</option>
                        <option value="New">New</option>
                        <option value="NoAnswer">No Answer</option>
                        <option value="FollowUp">Follow Up</option>
                        <option value="Busy">Busy</option>
                        <option value="Canceled">Canceled</option>
                        <option value="DoneDeal">Done Deal</option>
                        <option value="NotInterested">Not Interested</option>
                        <option value="WrongNumber">Wrong Number</option>
                        <option value="Closed">Closed</option>
                        <option value="NoBudget">No Budget</option>
                        <option value="Potential">Potential</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label>Project</label>
                    <select class="filter-control" id="projectFilter">
                        <option value="all">All Projects</option>
                        @foreach (var project in Model.Select(l => l.Project?.Name).Where(p => !string.IsNullOrEmpty(p)).Distinct())
                        {
                            <option value="@project">@project</option>
                        }
                    </select>
                </div>
                <div class="filter-group">
                    <label>Search</label>
                    <div class="search-box">
                        <input type="text" class="filter-control" id="searchInput" placeholder="Search leads...">
                        <button class="search-btn"><i class="fas fa-search"></i></button>
                    </div>
                </div>
            </div>
            <button class="btn btn-outline" id="resetFilters">
                <i class="fas fa-sync-alt"></i> Reset Filters
            </button>
        </div>

        <!-- Tabs Navigation -->
        <div class="tabs">
            <div class="tab active" data-status="all">
                <span>All Leads</span>
                <span class="tab-badge">@Model.Count</span>
            </div>
            <div class="tab" data-status="New">
                <span>New</span>
                <span class="tab-badge">@Model.Count(l => l.CurrentStatus == LeadStatusType.New)</span>
            </div>
            <div class="tab" data-status="NoAnswer">
                <span>No Answer</span>
                <span class="tab-badge">@Model.Count(l => l.CurrentStatus == LeadStatusType.NoAnswer)</span>
            </div>
            <div class="tab" data-status="FollowUp">
                <span>Follow Up</span>
                <span class="tab-badge">@Model.Count(l => l.CurrentStatus == LeadStatusType.FollowUp)</span>
            </div>
            <div class="tab" data-status="Busy">
                <span>Busy</span>
                <span class="tab-badge">@Model.Count(l => l.CurrentStatus == LeadStatusType.Busy)</span>
            </div>
            <div class="tab" data-status="DoneDeal">
                <span>Done Deals</span>
                <span class="tab-badge">@Model.Count(l => l.CurrentStatus == LeadStatusType.DoneDeal)</span>
            </div>
            <div class="tab" data-status="Closed">
                <span>Closed</span>
                <span class="tab-badge">@Model.Count(l => l.CurrentStatus == LeadStatusType.Closed)</span>
            </div>
            <div class="tab" data-status="Potential">
                <span>Potential</span>
                <span class="tab-badge">@Model.Count(l => l.CurrentStatus == LeadStatusType.Potential)</span>
            </div>
        </div>

        <!-- Leads Grid -->
        <div class="leads-grid" id="leadsContainer">
            @{
                var orderedLeads = Model.OrderByDescending(l => l.CreatedAt).ToList();
            }

            @foreach (var lead in orderedLeads)
            {
                <div class="lead-card" data-status="@lead.CurrentStatus.ToString()" data-project="@lead.Project?.Name" data-search="@($"{lead.ClientName} {lead.ClientPhone} {lead.Comment} {lead.Unit?.UnitCode}")">
                    <div class="card-header">
                        <div class="client-info">
                            <h3>@lead.ClientName</h3>
                            <p><i class="fas fa-phone"></i> @lead.ClientPhone</p>
                        </div>
                        <span class="status-badge @GetStatusBadgeClass(lead.CurrentStatus)">@lead.CurrentStatus</span>
                    </div>
                    <div class="card-body">
                        <div class="project-info">
                            <i class="fas fa-building"></i>
                            <span>@(lead.Project?.Name ?? "No Project")</span>
                        </div>

                        @if (lead.Unit != null)
                        {
                            <div class="unit-details">
                                <h4><i class="fas fa-home"></i> Unit Details</h4>
                                <div class="unit-grid">
                                    <div class="unit-item">
                                        <span>Code:</span> @lead.Unit.UnitCode
                                    </div>
                                    <div class="unit-item">
                                        <span>Type:</span> @lead.Unit.Type
                                    </div>
                                    <div class="unit-item">
                                        <span>Price:</span> @lead.Unit.Price.ToString("C")
                                    </div>
                                    <div class="unit-item">
                                        <span>Area:</span> @lead.Unit.Area m²
                                    </div>
                                    @if (lead.Unit.Bedrooms > 0)
                                    {
                                        <div class="unit-item">
                                            <span>Bedrooms:</span> @lead.Unit.Bedrooms
                                        </div>
                                    }
                                    @if (lead.Unit.Bathrooms > 0)
                                    {
                                        <div class="unit-item">
                                            <span>Bathrooms:</span> @lead.Unit.Bathrooms
                                        </div>
                                    }
                                </div>
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(lead.Comment))
                        {
                            <div class="comment-section">
                                <p>@lead.Comment</p>
                            </div>
                        }
                    </div>
                    <div class="card-footer">
                        <div class="date-info">
                            <i class="fas fa-clock"></i>
                            @if (lead.CurrentStatus == LeadStatusType.DoneDeal)
                            {
                                <text>Completed on: @lead.UpdatedAt?.ToString("MMM dd, yyyy")</text>
                            }
                            else if (lead.CurrentStatus == LeadStatusType.Canceled)
                            {
                                <text>Canceled on: @lead.UpdatedAt?.ToString("MMM dd, yyyy")</text>
                            }
                            else
                            {
                                <text>Last updated: @lead.UpdatedAt?.ToString("MMM dd, yyyy")</text>
                            }
                        </div>
                        <div class="action-buttons">
                            <a href="@Url.Action("LeadDetails", new { id = lead.Id })" class="btn btn-primary">
                                <i class="fas fa-eye"></i> Details
                            </a>
                        </div>
                    </div>
                </div>
            }

            @if (!Model.Any())
            {
                <div class="empty-state">
                    <i class="fas fa-user-tie"></i>
                    <h3>No Active Leads</h3>
                    <p>You currently don't have any leads assigned to you</p>
                    <button class="btn btn-outline">
                        <i class="fas fa-sync-alt"></i> Refresh
                    </button>
                </div>
            }
        </div>
    </div>

    <script src="~/js/sales/mylead-sales.js" asp-append-version="true"></script>
</body>
</html>

@functions {
    string GetStatusBadgeClass(LeadStatusType status)
    {
        switch (status)
        {
            case LeadStatusType.New:
                return "badge-new";
            case LeadStatusType.NoAnswer:
                return "badge-noanswer";
            case LeadStatusType.FollowUp:
                return "badge-follow";
            case LeadStatusType.Busy:
                return "badge-busy";
            case LeadStatusType.Canceled:
                return "badge-cancel";
            case LeadStatusType.DoneDeal:
                return "badge-done";
            case LeadStatusType.NotInterested:
                return "badge-notinterested";
            case LeadStatusType.WrongNumber:
                return "badge-wrongnumber";
            case LeadStatusType.Closed:
                return "badge-closed";
            case LeadStatusType.NoBudget:
                return "badge-nobudget";
            case LeadStatusType.Potential:
                return "badge-potential";
            default:
                return "badge-new";
        }
    }
}
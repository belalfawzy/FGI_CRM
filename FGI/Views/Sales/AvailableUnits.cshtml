@model List<Unit>
@{
    ViewData["Title"] = "Available Units";
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
}

<!-- CSS Styles -->
<style>
    :root {
        --primary: #4e73df;
        --primary-dark: #3a56c4;
        --secondary: #6f42c1;
        --success: #1cc88a;
        --info: #36b9cc;
        --warning: #f6c23e;
        --danger: #e74a3b;
        --light: #f8f9fc;
        --dark: #5a5c69;
        --bg-gradient: linear-gradient(180deg, #4e73df 10%, #224abe 100%);
        --card-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
        --transition: all 0.3s ease-in-out;
    }

    body {
        font-family: 'Nunito', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f8f9fc;
        color: #5a5c69;
    }

    .glass-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 12px;
        border: 1px solid rgba(255, 255, 255, 0.5);
        box-shadow: var(--card-shadow);
        transition: var(--transition);
    }

        .glass-card:hover {
            box-shadow: 0 0.5rem 2rem rgba(58, 59, 69, 0.25);
        }

    .stats-card {
        background: linear-gradient(135deg, rgba(78, 115, 223, 0.1) 0%, rgba(58, 86, 196, 0.1) 100%);
        border: 1px solid rgba(78, 115, 223, 0.2);
        border-radius: 12px;
        transition: var(--transition);
    }

        .stats-card:hover {
            transform: translateY(-3px);
            box-shadow: var(--card-shadow);
        }

    .table-container {
        width: 100%;
        overflow-x: auto;
        border-radius: 12px;
    }

    .units-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
        font-size: 0.95rem;
        color: #5a5c69;
    }

        .units-table th {
            background: var(--bg-gradient);
            color: white;
            font-weight: 600;
            padding: 14px 16px;
            border: none;
        }

            .units-table th:first-child {
                border-top-left-radius: 12px;
            }

            .units-table th:last-child {
                border-top-right-radius: 12px;
            }

        .units-table td {
            padding: 16px 16px;
            vertical-align: middle;
            border-bottom: 1px solid #e3e6f0;
            background-color: white;
        }

        .units-table tr:last-child td:first-child {
            border-bottom-left-radius: 12px;
        }

        .units-table tr:last-child td:last-child {
            border-bottom-right-radius: 12px;
        }

        .units-table tr:hover td {
            background-color: rgba(78, 115, 223, 0.05);
        }

    .badge {
        font-weight: 500;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.85rem;
    }

    .badge-primary {
        background-color: rgba(78, 115, 223, 0.15);
        color: var(--primary);
    }

    .badge-sale {
        background-color: rgba(28, 200, 138, 0.15);
        color: var(--success);
    }

    .badge-rent {
        background-color: rgba(246, 194, 62, 0.15);
        color: var(--warning);
    }

    .filter-toggle {
        text-decoration: none;
        color: var(--primary);
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
    }

        .filter-toggle:hover {
            color: var(--primary-dark);
        }

    .btn-primary {
        background: var(--bg-gradient);
        border: none;
        border-radius: 8px;
        padding: 10px 20px;
        color: white;
        font-weight: 600;
        transition: var(--transition);
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(78, 115, 223, 0.3);
            background: linear-gradient(180deg, var(--primary-dark) 10%, var(--primary) 100%);
        }

    .form-control {
        border-radius: 8px;
        padding: 10px 14px;
        border: 1px solid #d1d3e2;
        transition: var(--transition);
    }

        .form-control:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
        }

    .form-select {
        border-radius: 8px;
        padding: 10px 14px;
        border: 1px solid #d1d3e2;
        transition: var(--transition);
    }

        .form-select:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
        }

    .fade-in {
        animation: fadeIn 0.6s ease forwards;
    }

    @@keyframes fadeIn {
        from

    {
        opacity: 0;
        transform: translateY(20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .view-details {
        background-color: rgba(78, 115, 223, 0.1);
        color: var(--primary);
        border: none;
        border-radius: 6px;
        padding: 8px 14px;
        font-size: 0.85rem;
        font-weight: 600;
        transition: var(--transition);
        cursor: pointer;
    }

        .view-details:hover {
            background-color: rgba(78, 115, 223, 0.2);
            transform: translateY(-1px);
        }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .units-table {
            font-size: 0.85rem;
        }

            .units-table th,
            .units-table td {
                padding: 10px 8px;
            }

        .stats-card {
            margin-bottom: 15px;
        }
    }
</style>

<div class="container-fluid">
    <!-- Alerts Section -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show fade-in" role="alert">
            <div class="d-flex align-items-center">
                <i class="fas fa-check-circle mr-2"></i>
                <strong>Success!</strong> @TempData["SuccessMessage"]
            </div>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show fade-in" role="alert">
            <div class="d-flex align-items-center">
                <i class="fas fa-exclamation-circle mr-2"></i>
                <strong>Error!</strong> @TempData["ErrorMessage"]
            </div>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <!-- Stats Overview -->
    <div class="row mb-4">
        <div class="col-md-4 mb-3">
            <div class="stats-card p-3 fade-in">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <p class="mb-0 text-muted">Total Units</p>
                        <h3 class="mb-0 text-primary">@Model.Count</h3>
                    </div>
                    <div class="bg-primary p-3 rounded-circle" style="background: rgba(78, 115, 223, 0.2) !important;">
                        <i class="fas fa-building text-primary"></i>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4 mb-3">
            <div class="stats-card p-3 fade-in">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <p class="mb-0 text-muted">For Sale</p>
                        <h3 class="mb-0 text-success">@Model.Count(u => u.UnitType.ToString() == "Sale")</h3>
                    </div>
                    <div class="bg-success p-3 rounded-circle" style="background: rgba(28, 200, 138, 0.2) !important;">
                        <i class="fas fa-tag text-success"></i>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4 mb-3">
            <div class="stats-card p-3 fade-in">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <p class="mb-0 text-muted">For Rent</p>
                        <h3 class="mb-0 text-warning">@Model.Count(u => u.UnitType.ToString() == "Rent")</h3>
                    </div>
                    <div class="bg-warning p-3 rounded-circle" style="background: rgba(246, 194, 62, 0.2) !important;">
                        <i class="fas fa-key text-warning"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Card -->
    <div class="card glass-card mb-4 fade-in">
        <div class="card-header py-3" style="background: var(--bg-gradient); color: white; border-radius: 12px 12px 0 0;">
            <h6 class="m-0 font-weight-bold">
                <i class="fas fa-filter mr-2"></i>Filter Units
            </h6>
        </div>
        <div class="card-body">
            <form id="filterForm" method="get" asp-action="AvailableUnits">
                <!-- Search Bar -->
                <div class="form-group mb-4">
                    <div class="input-group">
                        <input type="text" name="searchTerm" id="searchTerm" class="form-control"
                               placeholder="Search by Unit Code or Owner Phone..."
                               value="@Context.Request.Query["searchTerm"]">
                        <div class="input-group-append">
                            <span class="input-group-text bg-transparent">
                                <i class="fas fa-search text-primary"></i>
                            </span>
                        </div>
                    </div>
                </div>

                <!-- Main Filters -->
                <div class="row">
                    <!-- Unit Type -->
                    <div class="col-md-3 mb-3">
                        <div class="form-group">
                            <label class="font-weight-bold">Unit Type</label>
                            <select name="type" id="filterType" class="form-select">
                                <option value="">All Types</option>
                                @foreach (var type in Enum.GetValues(typeof(UnitType)))
                                {
                                    <option value="@type">@type</option>
                                }
                            </select>
                        </div>
                    </div>

                    <!-- Project -->
                    <div class="col-md-3 mb-3">
                        <div class="form-group">
                            <label class="font-weight-bold">Project</label>
                            <select name="projectId" id="filterProject" class="form-select" asp-items="ViewBag.Projects">
                                <option value="">All Projects</option>
                            </select>
                        </div>
                    </div>

                    <!-- Price Range -->
                    <div class="col-md-3 mb-3">
                        <div class="form-group">
                            <label class="font-weight-bold">Price Range</label>
                            <div class="row">
                                <div class="col">
                                    <input type="number" name="minPrice" id="filterMinPrice" class="form-control" placeholder="Min">
                                </div>
                                <div class="col">
                                    <input type="number" name="maxPrice" id="filterMaxPrice" class="form-control" placeholder="Max">
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bedrooms -->
                    <div class="col-md-3 mb-3">
                        <div class="form-group">
                            <label class="font-weight-bold">Bedrooms</label>
                            <select name="bedrooms" id="filterBedrooms" class="form-select">
                                <option value="">Any</option>
                                <option value="1">1</option>
                                <option value="2">2</option>
                                <option value="3">3</option>
                                <option value="4">4+</option>
                            </select>
                        </div>
                    </div>
                </div>

                <!-- Advanced Filters Toggle -->
                <div class="text-center mt-3">
                    <a class="filter-toggle" id="toggleAdvanced">
                        <i class="fas fa-sliders-h mr-2"></i>Advanced Filters
                        <i class="fas fa-chevron-down ml-2"></i>
                    </a>
                </div>

                <!-- Advanced Filters -->
                <div id="advancedFilters" class="row mt-3" style="display:none;">
                    <!-- Min Area -->
                    <div class="col-md-3 mb-3">
                        <div class="form-group">
                            <label class="font-weight-bold">Min Area (sqm)</label>
                            <input type="number" name="minArea" id="filterMinArea" class="form-control" placeholder="Minimum area">
                        </div>
                    </div>

                    <!-- Bathrooms -->
                    <div class="col-md-3 mb-3">
                        <div class="form-group">
                            <label class="font-weight-bold">Bathrooms</label>
                            <select name="bathrooms" id="filterBathrooms" class="form-select">
                                <option value="">Any</option>
                                <option value="1">1</option>
                                <option value="2">2</option>
                                <option value="3">3+</option>
                            </select>
                        </div>
                    </div>

                    <!-- Sale Type -->
                    <div class="col-md-3 mb-3">
                        <div class="form-group">
                            <label class="font-weight-bold">Sale Type</label>
                            <select name="saleType" id="filterSaleType" class="form-select">
                                <option value="">Any</option>
                                <option value="Sale">For Sale</option>
                                <option value="Rent">For Rent</option>
                            </select>
                        </div>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="d-flex justify-content-between mt-4">
                    <div>
                        <a href="@Url.Action("AvailableUnits")" class="btn btn-outline-secondary">
                            <i class="fas fa-undo mr-2"></i>Reset
                        </a>
                    </div>
                    <div>
                        <button type="submit" class="btn btn-primary px-4" style="display: none;" id="applyFiltersBtn">
                            <i class="fas fa-filter mr-2"></i>Apply Filters
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Units Table Card -->
    <div class="card glass-card fade-in">
        <div class="card-header py-3" style="background: var(--bg-gradient); color: white; border-radius: 12px 12px 0 0;">
            <div class="d-flex justify-content-between align-items-center">
                <h6 class="m-0 font-weight-bold">Available Units</h6>
                <span class="badge bg-light text-primary">@Model.Count Units Found</span>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-container">
                <table class="units-table">
                    <thead>
                        <tr>
                            <th>Created</th>
                            <th>Unit Code</th>
                            <th>Type</th>
                            <th>Sale Type</th>
                            <th>Location</th>
                            <th>Area(sqm)</th>
                            <th>Bed/Bath</th>
                            <th>Price</th>
                            <th>Project</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var unit in Model)
                        {
                            <tr>
                                <td>@unit.CreatedAt.ToString("yyyy-MM-dd")</td>
                                <td class="font-weight-bold">@unit.UnitCode</td>
                                <td>
                                    <span class="badge badge-primary">@unit.Type</span>
                                </td>
                                <td>
                                    @if (unit.UnitType.ToString() == "Sale")
                                    {
                                        <span class="badge badge-sale">For Sale</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-rent">For Rent</span>
                                    }
                                </td>
                                <td>@unit.Location</td>
                                <td>@unit.Area</td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-bed text-muted mr-1"></i> @unit.Bedrooms
                                        <i class="fas fa-bath text-muted mx-3"></i> @unit.Bathrooms
                                    </div>
                                </td>
                                <td class="font-weight-bold">
                                    @if (unit.Currency == Currency.USD)
                                    {
                                        <span class="text-muted">$</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">EGP</span>
                                    }
                                    @unit.Price.ToString("N0")
                                </td>
                                <td>@unit.Project?.Name</td>
                                <td class="text-center">
                                    <button class="view-details" data-id="@unit.Id">
                                        <i class="fas fa-eye mr-1"></i> Details
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Unit Details Modal -->
<div class="modal fade" id="unitDetailsModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background: var(--bg-gradient); color: white;">
                <h5 class="modal-title">
                    <i class="fas fa-home"></i> Unit Details
                </h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="unitDetailsContent">
                <!-- Content will be loaded here via AJAX -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Toggle advanced filters
            $('#toggleAdvanced').click(function() {
                $('#advancedFilters').toggle();
                $(this).find('i').toggleClass('fa-chevron-down fa-chevron-up');
            });

            // Auto-submit form when filters change
            $('#searchTerm, #filterType, #filterProject, #filterMinPrice, #filterMaxPrice, ' +
              '#filterBedrooms, #filterMinArea, #filterBathrooms, #filterSaleType').on('input change', function() {
                // Add a small delay for search input to avoid too many requests
                if ($(this).attr('id') === 'searchTerm') {
                    clearTimeout($(this).data('timeout'));
                    $(this).data('timeout', setTimeout(function() {
                        $('#filterForm').submit();
                    }, 800));
                } else {
                    $('#filterForm').submit();
                }
            });

            // Preserve filter values from URL
            const urlParams = new URLSearchParams(window.location.search);

            // Set basic filters
            if (urlParams.get('type')) {
                $('#filterType').val(urlParams.get('type'));
            }

            if (urlParams.get('projectId')) {
                $('#filterProject').val(urlParams.get('projectId'));
            }

            if (urlParams.get('minPrice')) {
                $('#filterMinPrice').val(urlParams.get('minPrice'));
            }

            if (urlParams.get('maxPrice')) {
                $('#filterMaxPrice').val(urlParams.get('maxPrice'));
            }

            if (urlParams.get('bedrooms')) {
                $('#filterBedrooms').val(urlParams.get('bedrooms'));
            }

            // Set advanced filters if any exist
            if (urlParams.get('minArea') || urlParams.get('bathrooms') || urlParams.get('saleType')) {
                $('#advancedFilters').show();
                $('#toggleAdvanced i').removeClass('fa-chevron-down').addClass('fa-chevron-up');

                if (urlParams.get('minArea')) {
                    $('#filterMinArea').val(urlParams.get('minArea'));
                }

                if (urlParams.get('bathrooms')) {
                    $('#filterBathrooms').val(urlParams.get('bathrooms'));
                }

                if (urlParams.get('saleType')) {
                    $('#filterSaleType').val(urlParams.get('saleType'));
                }
            }

            // Handle details button click
            $(document).on('click', '.view-details', function() {
                var unitId = $(this).data('id');
                $('#unitDetailsContent').html(`
                    <div class="text-center py-4">
                        <i class="fas fa-spinner fa-spin fa-2x text-primary"></i>
                        <p class="mt-2">Loading unit details...</p>
                    </div>
                `);

                $('#unitDetailsModal').modal('show');

                $.get('@Url.Action("GetUnitDetails", "Sales")', { id: unitId })
                    .done(function(data) {
                        $('#unitDetailsContent').html(data);
                    })
                    .fail(function(xhr, status, error) {
                        console.error("Error loading details:", status, error);
                        $('#unitDetailsContent').html(`
                            <div class="alert alert-danger">
                                <i class="fas fa-exclamation-circle mr-2"></i>
                                Error loading details. Please try again.
                            </div>
                        `);
                    });
            });
        });
    </script>
}
@model List<Unit>
@{
    ViewData["Title"] = "All Units";
}

<div class="container-fluid px-3">
    <!-- Header -->
    <div class="header bg-gradient-primary text-white py-3 mb-4 shadow-lg rounded-lg">
        <div class="container-fluid px-3">
            <div class="d-flex align-items-center justify-content-between">
                <h1 class="h4 mb-0">
                    <i class="fa-solid fa-building me-2"></i> Units Management
                </h1>
                <a asp-action="AddUnit" class="btn btn-light btn-circle btn-md shadow-sm">
                    <i class="fa-solid fa-plus"></i>
                </a>
            </div>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="filter-section card shadow-lg mb-4 border-0 animate__animated animate__fadeIn">
        <div class="filter-title card-header bg-gradient-primary text-white py-3 d-flex align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold">
                <i class="fa-solid fa-filter me-2"></i> Search Filters
            </h6>
            <button id="resetFilters" class="btn btn-sm btn-outline-light">
                <i class="fa-solid fa-arrow-rotate-right"></i> Reset
            </button>
        </div>
        <div class="filter-grid card-body bg-light rounded-bottom py-3">
            <div class="filter-group">
                <label class="form-label small text-muted">Search</label>
                <div class="input-group search-box">
                    <span class="input-group-text bg-white border-end-0"><i class="fa-solid fa-magnifying-glass text-primary"></i></span>
                    <input id="searchInput" type="text" class="form-control filter-control border-start-0" placeholder="Unit code or location">
                </div>
            </div>
            <div class="filter-group">
                <label class="form-label small text-muted">Project</label>
                <select id="projectFilter" class="form-select filter-control select2-filter">
                    <option value="">All Projects</option>
                    @foreach (var project in ViewBag.Projects)
                    {
                        <option value="@project.Value">@project.Text</option>
                    }
                </select>
            </div>
            <div class="filter-group">
                <label class="form-label small text-muted">Unit Type</label>
                <select id="typeFilter" class="form-select filter-control select2-filter">
                    <option value="">All Types</option>
                    <option value="Apartment">Apartment</option>
                    <option value="Penthouse">Penthouse</option>
                    <option value="Villa">Villa</option>
                    <option value="StandAloneVilla">Stand Alone Villa</option>
                    <option value="TownHouse">Town House</option>
                    <option value="TwinHouse">Twin House</option>
                    <option value="Studio">Studio</option>
                    <option value="ParkVilla">Park Villa</option>
                    <option value="Chalet">Chalet</option>
                    <option value="Duplex">Duplex</option>
                </select>
            </div>
            <div class="filter-group">
                <label class="form-label small text-muted">Bedrooms</label>
                <select id="bedroomFilter" class="form-select filter-control select2-filter">
                    <option value="">All Bedrooms</option>
                    <option value="1">1 Bedroom</option>
                    <option value="2">2 Bedrooms</option>
                    <option value="3">3 Bedrooms</option>
                    <option value="4">4+ Bedrooms</option>
                </select>
            </div>
            <div class="filter-group">
                <label class="form-label small text-muted">Status</label>
                <select id="statusFilter" class="form-select filter-control select2-filter">
                    <option value="">All Statuses</option>
                    <option value="true">Available</option>
                    <option value="false">Sold</option>
                </select>
            </div>
            <div class="filter-group">
                <label class="form-label small text-muted">Price Range</label>
                <div class="d-flex align-items-center">
                    <input type="number" id="minPrice" class="form-control filter-control me-1" placeholder="Min" min="0">
                    <span class="mx-1">-</span>
                    <input type="number" id="maxPrice" class="form-control filter-control ms-1" placeholder="Max" min="0">
                </div>
            </div>
        </div>
    </div>

    <!-- Units Table -->
    <div class="card shadow-lg border-0 animate__animated animate__fadeIn">
        <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center border-bottom">
            <h6 class="m-0 font-weight-bold text-primary">
                <i class="fa-solid fa-list me-2"></i> All Units
            </h6>
            <div class="d-flex align-items-center">
                <span class="badge bg-primary rounded-pill me-3">@Model.Count records</span>
                <a href="#" class="btn btn-outline-success btn-sm me-2" id="exportBtn" title="Download CSV">
                    <i class="fa-solid fa-file-csv"></i> Export CSV
                </a>
                <div class="dropdown">
                    <button class="btn btn-outline-primary btn-sm dropdown-toggle" type="button" id="showEntriesDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        Show <span id="currentEntries">10</span> entries
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="showEntriesDropdown">
                        <li><a class="dropdown-item entries-option" href="#" data-value="10">10</a></li>
                        <li><a class="dropdown-item entries-option" href="#" data-value="20">20</a></li>
                        <li><a class="dropdown-item entries-option" href="#" data-value="30">30</a></li>
                        <li><a class="dropdown-item entries-option" href="#" data-value="50">50</a></li>
                        <li><a class="dropdown-item entries-option" href="#" data-value="-1">All</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0" id="unitsTable">
                    <thead class="bg-light">
                        <tr>
                            <th>Unit Code</th>
                            <th>Type</th>
                            <th>Location</th>
                            <th>Area(sqm)</th>
                            <th>Bed/Bath</th>
                            <th>Price</th>
                            <th>Project</th>
                            <th>Status</th>
                            <th class="text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var unit in Model)
                        {
                            <tr data-search="@(unit.UnitCode + " " + unit.Location).ToLower()"
                                data-project="@unit.Project?.Id"
                                data-type="@unit.Type"
                                data-bedrooms="@unit.Bedrooms"
                                data-price="@unit.Price"
                                data-status="@unit.IsAvailable.ToString().ToLower()">
                                <td>
                                    <strong>@unit.UnitCode</strong>
                                    <div class="small text-muted">Created: @unit.CreatedAt.ToString("dd MMM yyyy")</div>
                                </td>
                                <td>@unit.Type</td>
                                <td>@unit.Location</td>
                                <td>@unit.Area</td>
                                <td>@unit.Bedrooms / @unit.Bathrooms</td>
                                <td>
                                    @(unit.Currency == Currency.USD ? "$" : "EGP") @unit.Price.ToString("N0")
                                </td>
                                <td>@unit.Project?.Name</td>
                                <td>
                                    <span class="status-badge badge @(unit.IsAvailable ? "badge-available" : "badge-sold")">
                                        @(unit.IsAvailable ? "Available" : "Sold")
                                    </span>
                                </td>
                                <td class="text-end">
                                    <div class="btn-group" role="group">
                                        <!-- Details Button -->
                                        <button class="btn btn-sm btn-outline-dark view-details"
                                                data-id="@unit.Id"
                                                title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </button>

                                        <!-- Toggle Status Button -->
                                        <button class="btn btn-sm @(unit.IsAvailable ? "btn-outline-warning" : "btn-outline-success") toggle-status"
                                                data-id="@unit.Id"
                                                title="@(unit.IsAvailable ? "Mark as Sold" : "Mark as Available")">
                                            <i class="fas fa-sync-alt"></i>
                                        </button>

                                        <!-- Edit Button -->
                                        <a asp-action="EditUnit" asp-controller="Admin" asp-route-id="@unit.Id"
                                           class="btn btn-sm btn-outline-info" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </a>

                                        <!-- Delete Button -->
                                        <button class="btn btn-sm btn-outline-danger delete-unit"
                                                data-id="@unit.Id"
                                                title="Delete">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Unit Details Modal -->
<div class="modal fade" id="unitDetailsModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content rounded-lg shadow-lg">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">
                    <i class="fas fa-home"></i> Unit Details
                </h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="unitDetailsContent">
                <!-- Content will be loaded here via AJAX -->
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <style>
        :root {
            --primary: #007bff;
            --secondary: #6c757d;
            --success: #28a745;
            --info: #17a2b8;
            --warning: #ffc107;
            --danger: #dc3545;
            --teal: #20c997;
            --purple: #6f42c1;
            --orange: #fd7e14;
            --dark: #343a40;
            --bg-gradient: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
            --card-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        .container-fluid {
            padding-left: 12px;
            padding-right: 12px;
        }

        .header {
            background: var(--bg-gradient);
            padding: 12px 16px;
            margin-bottom: 16px;
            border-radius: 10px;
            box-shadow: var(--card-shadow);
        }

        .filter-section {
            background: #fff;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 16px;
            box-shadow: var(--card-shadow);
        }

        .filter-title {
            padding: 10px 15px;
            margin-bottom: 0;
            border-bottom: none;
            background: var(--bg-gradient);
            border-radius: 10px 10px 0 0;
        }

        .filter-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 15px;
        }

        .filter-group {
            display: flex;
            flex-direction: column;
        }

        .filter-control {
            padding: 10px 12px;
            border: 1px solid #ced4da;
            border-radius: 8px;
            font-size: 0.95rem;
            transition: var(--transition);
            background: #fff;
        }

            .filter-control:focus {
                border-color: #007bff;
                box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
            }

        .search-box .input-group-text {
            border-radius: 8px 0 0 8px;
            border: 1px solid #ced4da;
            background: #fff;
        }

        .search-box .form-control {
            border-radius: 0 8px 8px 0;
        }

        .btn-outline-light {
            border-color: rgba(255, 255, 255, 0.5);
            color: #fff;
        }

        .table {
            border-radius: 10px;
            overflow: hidden;
            box-shadow: var(--card-shadow);
        }

        #unitsTable th {
            background: #f8f9fa;
            padding: 12px 15px;
            font-size: 0.85rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            border-bottom: 2px solid #e3e6f0;
        }

        #unitsTable td {
            padding: 10px 15px;
            vertical-align: middle;
            border-top: 1px solid #f8f9fc;
        }

        #unitsTable tr:hover {
            background: linear-gradient(90deg, #f1f3f9, #e9ecef);
        }

        .status-badge {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .badge-available {
            background: #e8f5e9;
            color: #388e3c;
        }

        .badge-sold {
            background: #ffebee;
            color: #d32f2f;
        }

        .btn-group .btn {
            padding: 8px 12px;
            font-size: 0.9rem;
            border-radius: 8px;
        }

        .modal-content {
            border-radius: 10px;
            overflow: hidden;
        }

        .price-inputs {
            display: flex;
            align-items: center;
            gap: 5px;
        }

            .price-inputs input {
                flex: 1;
                min-width: 0;
            }

        @@media (max-width: 768px) {
            .container-fluid {
                padding-left: 8px;
                padding-right: 8px;
            }

            .filter-grid {
                grid-template-columns: 1fr;
            }

            .price-inputs {
                flex-direction: column;
                gap: 10px;
            }

                .price-inputs span {
                    display: none;
                }
        }

        @@media (max-width: 576px) {
            .container-fluid {
                padding-left: 6px;
                padding-right: 6px;
            }

            .header {
                flex-direction: column;
                text-align: center;
                gap: 10px;
            }

            .filter-section {
                padding: 12px;
            }

            .filter-control {
                font-size: 0.9rem;
                padding: 8px 10px;
            }
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            let $rows = $("#unitsTable tbody tr");
            let showEntries = 10; // default value

            function applyFilters() {
                let search = $("#searchInput").val().toLowerCase();
                let project = $("#projectFilter").val();
                let type = $("#typeFilter").val();
                let status = $("#statusFilter").val();
                let bedrooms = $("#bedroomFilter").val();
                let minPrice = $("#minPrice").val() ? parseFloat($("#minPrice").val()) : null;
                let maxPrice = $("#maxPrice").val() ? parseFloat($("#maxPrice").val()) : null;

                let visibleCount = 0;

                $rows.each(function () {
                    let $row = $(this);
                    let match = true;

                    if (search && !$row.data("search").includes(search)) match = false;
                    if (project && $row.data("project") != project) match = false;
                    if (type && $row.data("type") != type) match = false;
                    if (status && $row.data("status") != status.toLowerCase()) match = false;

                    // Filter by bedrooms
                    if (bedrooms) {
                        if (bedrooms === "4") {
                            if ($row.data("bedrooms") < 4) match = false;
                        } else {
                            if ($row.data("bedrooms") != parseInt(bedrooms)) match = false;
                        }
                    }

                    // Filter by price range
                    if (minPrice !== null && $row.data("price") < minPrice) match = false;
                    if (maxPrice !== null && $row.data("price") > maxPrice) match = false;

                    if (match && (showEntries === -1 || visibleCount < showEntries)) {
                        $row.show();
                        visibleCount++;
                    } else {
                        $row.hide();
                    }
                });
            }

            // Filters change
            $(".filter-control").on("input change", applyFilters);
            $("#minPrice, #maxPrice").on("input", applyFilters);

            // Show entries dropdown
            $(".entries-option").click(function (e) {
                e.preventDefault();
                showEntries = parseInt($(this).data("value"));
                $("#currentEntries").text(showEntries === -1 ? "All" : showEntries);
                applyFilters();
            });

            // Reset filters
            $("#resetFilters").click(function () {
                $("#searchInput").val("");
                $("#projectFilter").val("").trigger("change");
                $("#typeFilter").val("").trigger("change");
                $("#statusFilter").val("").trigger("change");
                $("#bedroomFilter").val("").trigger("change");
                $("#minPrice").val("");
                $("#maxPrice").val("");
                showEntries = 10;
                $("#currentEntries").text("10");
                applyFilters();
            });

            // Handle details button click
            $(document).on('click', '.view-details', function() {
                var unitId = $(this).data('id');
                $('#unitDetailsContent').html(`
                    <div class="text-center py-4">
                        <i class="fas fa-spinner fa-spin fa-2x"></i>
                        <p>Loading unit details...</p>
                    </div>
                `);

                $('#unitDetailsModal').modal('show');

                $.get('@Url.Action("GetUnitDetails", "Admin")', { id: unitId })
                    .done(function(data) {
                        $('#unitDetailsContent').html(data);
                    })
                    .fail(function(xhr, status, error) {
                        console.error("Error loading details:", status, error);
                        $('#unitDetailsContent').html(`
                            <div class="alert alert-danger">
                                Error loading details. Please try again.
                            </div>
                        `);
                    });
            });

            // Handle delete button click
            $(document).on('click', '.delete-unit', function(e) {
                e.preventDefault();
                var unitId = $(this).data('id');

                if (confirm('Are you sure you want to delete this unit? This action cannot be undone.')) {
                    $.ajax({
                        url: '@Url.Action("DeleteUnit", "Admin")',
                        type: 'POST',
                        data: {
                            id: unitId,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function(response) {
                            if (response.success) {
                                window.location.reload();
                            } else {
                                alert('Error: ' + response.message);
                            }
                        },
                        error: function() {
                            alert('An error occurred while deleting the unit.');
                        }
                    });
                }
            });

            // Handle toggle status button click
            $(document).on('click', '.toggle-status', function(e) {
                e.preventDefault();
                var button = $(this);
                var unitId = button.data('id');

                $.ajax({
                    url: '@Url.Action("ToggleUnitStatus", "Admin")',
                    type: 'POST',
                    data: {
                        id: unitId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            // Update button appearance
                            button.toggleClass('btn-outline-warning btn-outline-success');
                            button.attr('title', response.isAvailable ? "Mark as Sold" : "Mark as Available");

                            // Update status badge
                            var row = button.closest('tr');
                            var badge = row.find('.badge');
                            badge.toggleClass('badge-available badge-sold');
                            badge.text(response.isAvailable ? "Available" : "Sold");

                            // Update data attribute
                            row.attr('data-status', response.isAvailable.toString().toLowerCase());
                        } else {
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function() {
                        alert('An error occurred while updating the unit status.');
                    }
                });
            });

            // Export button functionality
            $('#exportBtn').click(function(e) {
                e.preventDefault();
                // Trigger DataTable export
                $('.buttons-excel').trigger('click');
            });

            // Initial filter
            applyFilters();
        });
    </script>
}
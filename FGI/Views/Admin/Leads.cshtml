@using FGI.Enums
@model FGI.ViewModel.AdminLeadsViewModel
@{
    ViewData["Title"] = "Leads Management";
}

<div class="container-fluid px-3">
    <!-- Header -->
    <div class="header bg-gradient-primary text-white py-3 mb-4 shadow-lg rounded-lg">
        <div class="container-fluid px-3">
            <div class="d-flex align-items-center justify-content-between">
                <h1 class="h4 mb-0">
                    <i class="fa-solid fa-user-tie me-2"></i> Leads Management
                </h1>
                <a asp-action="Create" class="btn btn-light btn-circle btn-md shadow-sm">
                    <i class="fa-solid fa-plus"></i>
                </a>
            </div>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="filter-section card shadow-lg mb-4 border-0 animate__animated animate__fadeIn">
        <div class="filter-title card-header bg-gradient-primary text-white py-3 d-flex align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold">
                <i class="fa-solid fa-filter me-2"></i> Search Filters
            </h6>
            <button id="resetFilters" class="btn btn-sm btn-outline-light">
                <i class="fa-solid fa-arrow-rotate-right"></i> Reset
            </button>
        </div>
        <div class="filter-grid card-body bg-light rounded-bottom py-3">
            <div class="filter-group">
                <label class="form-label small text-muted">Search</label>
                <div class="input-group search-box">
                    <span class="input-group-text bg-white border-end-0"><i class="fa-solid fa-magnifying-glass text-primary"></i></span>
                    <input id="searchInput" type="text" class="form-control filter-control border-start-0" placeholder="Name or phone">
                </div>
            </div>
            <div class="filter-group">
                <label class="form-label small text-muted">Project</label>
                <select id="projectFilter" class="form-select filter-control select2-filter">
                    <option value="">All Projects</option>
                    @foreach (var project in Model.Projects)
                    {
                        <option value="@project.Id">@project.Name</option>
                    }
                </select>
            </div>
            <div class="filter-group">
                <label class="form-label small text-muted">Sales Rep</label>
                <select id="salesRepFilter" class="form-select filter-control select2-filter">
                    <option value="">All Reps</option>
                    @foreach (var user in Model.SalesUsers)
                    {
                        <option value="@user.Id">@user.FullName</option>
                    }
                </select>
            </div>
            <div class="filter-group">
                <label class="form-label small text-muted">Status</label>
                <select id="statusFilter" class="form-select filter-control select2-filter">
                    <option value="">All Statuses</option>
                    @foreach (LeadStatusType status in Enum.GetValues(typeof(LeadStatusType)))
                    {
                        <option value="@GetStatusDisplayName(status)">@GetStatusDisplayName(status)</option>
                    }
                </select>
            </div>
            <div class="filter-group">
                <label class="form-label small text-muted">Date</label>
                <input id="dateFilter" type="date" class="form-control filter-control">
            </div>
        </div>
    </div>

    <!-- Status Tabs -->
    <div class="tabs mb-4 bg-white shadow-lg rounded-lg p-2 animate__animated animate__fadeIn">
        <div class="tab active" data-status="">
            All <span class="tab-badge badge bg-secondary">@Model.Leads.Count</span>
        </div>
        <div class="tab" data-status="New Lead">
            New <span class="tab-badge badge bg-primary">@Model.Leads.Count(l => l.CurrentStatus == LeadStatusType.New)</span>
        </div>
        <div class="tab" data-status="Follow Up">
            Follow Up <span class="tab-badge badge bg-info">@Model.Leads.Count(l => l.CurrentStatus == LeadStatusType.FollowUp)</span>
        </div>
        <div class="tab" data-status="Done Deal">
            Done Deal <span class="tab-badge badge bg-success">@Model.Leads.Count(l => l.CurrentStatus == LeadStatusType.DoneDeal)</span>
        </div>
        <div class="tab" data-status="Closed">
            Closed <span class="tab-badge badge bg-danger">@Model.Leads.Count(l => l.CurrentStatus == LeadStatusType.Closed)</span>
        </div>
        <div class="tab" data-status="Potential">
            Potential <span class="tab-badge badge bg-teal">@Model.Leads.Count(l => l.CurrentStatus == LeadStatusType.Potential)</span>
        </div>
        <div class="tab" data-status="Not Interested">
            Not Interested <span class="tab-badge badge bg-purple">@Model.Leads.Count(l => l.CurrentStatus == LeadStatusType.NotInterested)</span>
        </div>
        <div class="tab" data-status="No Answer">
            No Answer <span class="tab-badge badge bg-warning">@Model.Leads.Count(l => l.CurrentStatus == LeadStatusType.NoAnswer)</span>
        </div>
        <div class="tab" data-status="No Budget">
            No Budget <span class="tab-badge badge bg-danger">@Model.Leads.Count(l => l.CurrentStatus == LeadStatusType.NoBudget)</span>
        </div>
    </div>

    <!-- Leads Table -->
    <div class="card shadow-lg border-0 animate__animated animate__fadeIn">
        <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center border-bottom">
            <h6 class="m-0 font-weight-bold text-primary">
                <i class="fa-solid fa-list me-2"></i> All Leads
            </h6>
            <div class="d-flex align-items-center">
                <span class="badge bg-primary rounded-pill me-3">@Model.Leads.Count records</span>
                <!-- Show entries dropdown -->
                <a href="@Url.Action("ExportLeadsToCsv", "Admin")" class="btn btn-outline-success btn-sm me-2" title="Download CSV">
                    <i class="fa-solid fa-file-csv"></i> Export CSV
                </a>
                <div class="dropdown">
                    <button class="btn btn-outline-primary btn-sm dropdown-toggle" type="button" id="showEntriesDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        Show <span id="currentEntries">10</span> entries
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="showEntriesDropdown">
                        <li><a class="dropdown-item entries-option" href="#" data-value="10">10</a></li>
                        <li><a class="dropdown-item entries-option" href="#" data-value="20">20</a></li>
                        <li><a class="dropdown-item entries-option" href="#" data-value="30">30</a></li>
                        <li><a class="dropdown-item entries-option" href="#" data-value="50">50</a></li>
                        <li><a class="dropdown-item entries-option" href="#" data-value="-1">All</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0" id="leadsTable">
                    <thead class="bg-light">
                        <tr>
                            <th>Client</th>
                            <th>Contact</th>
                            <th>Project</th>
                            <th>UnitCode</th>
                            <th>Status</th>
                            <th>Created by</th>
                            <th>Assigned To</th>
                            <th>Last Updated</th>
                            <th class="text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var lead in Model.Leads.OrderByDescending(l => l.UpdatedAt))
                        {
                            <tr data-status="@GetStatusDisplayName(lead.CurrentStatus)" data-project="@lead.Project?.Id" data-salesrep="@lead.AssignedTo?.Id" data-date="@lead.UpdatedAt?.ToString("yyyy-MM-dd")" data-search="@(lead.ClientName + " " + lead.ClientPhone).ToLower()">
                                <td>
                                    <strong>@lead.ClientName</strong>
                                    <div class="small text-muted">Created: @lead.CreatedAt.ToString("dd MMM yyyy")</div>
                                </td>
                                <td>@lead.ClientPhone</td>
                                <td>@lead.Project?.Name</td>
                                <td>@lead.Unit?.UnitCode</td>
                                <td>
                                    <span class="status-badge badge @GetStatusBadgeClass(lead.CurrentStatus)">
                                        @GetStatusDisplayName(lead.CurrentStatus)
                                    </span>
                                </td>
                                <td>@lead.CreatedBy.FullName</td>
                                <td>
                                    @if (lead.AssignedTo != null)
                                    {
                                        <span>@lead.AssignedTo.FullName</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Unassigned</span>
                                    }
                                </td>
                                <td>@lead.UpdatedAt?.ToString("dd MMM yyyy HH:mm")</td>
                                <td class="text-end">
                                    <div class="btn-group" role="group">
                                        <a asp-action="LeadDetails" asp-route-id="@lead.Id" class="btn btn-sm btn-outline-dark" title="View Details">
                                            <i class="fa-solid fa-eye"></i>
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#assignModal-@lead.Id" title="Assign">
                                            <i class="fa-solid fa-user-pen"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-outline-info" data-bs-toggle="modal" data-bs-target="#statusModal-@lead.Id" title="Change Status">
                                            <i class="fa-solid fa-flag"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-outline-success position-relative" data-bs-toggle="modal" data-bs-target="#followupModal-@lead.Id" title="Follow-ups">
                                            <i class="fa-solid fa-comment-dots"></i>
                                            @if (Model.LeadFeedbacks.ContainsKey(lead.Id) && Model.LeadFeedbacks[lead.Id].Count > 0)
                                            {
                                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-success">
                                                    @Model.LeadFeedbacks[lead.Id].Count
                                                </span>
                                            }
                                        </button>
                                        <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#historyModal-@lead.Id" title="History">
                                            <i class="fa-solid fa-clock-rotate-left"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modals -->
@foreach (var lead in Model.Leads)
{
    <!-- Assign Modal -->
    <div class="modal fade" id="assignModal-@lead.Id" tabindex="-1" aria-labelledby="assignModalLabel-@lead.Id" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content rounded-lg shadow-lg">
                <div class="modal-header bg-gradient-primary text-white">
                    <h5 class="modal-title" id="assignModalLabel-@lead.Id">Assign Lead</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-controller="Admin" asp-action="AssignLead" method="post">
                    <div class="modal-body">
                        <input type="hidden" name="leadId" value="@lead.Id" />
                        <div class="mb-3">
                            <label class="form-label">Assign to:</label>
                            <select class="form-select select2-modal" name="salesUserId" required>
                                <option value="">-- Select Sales Rep --</option>
                                @foreach (var user in Model.SalesUsers)
                                {
                                    <option value="@user.Id">@user.FullName</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Assign</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Status Modal -->
    <div class="modal fade" id="statusModal-@lead.Id" tabindex="-1" aria-labelledby="statusModalLabel-@lead.Id" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content rounded-lg shadow-lg">
                <div class="modal-header bg-gradient-info text-white">
                    <h5 class="modal-title" id="statusModalLabel-@lead.Id">Change Lead Status</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-controller="Admin" asp-action="UpdateLeadStatus" method="post">
                    <div class="modal-body">
                        <input type="hidden" name="leadId" value="@lead.Id" />
                        <div class="mb-3">
                            <label class="form-label">New Status:</label>
                            <select class="form-select select2-modal" name="status" required>
                                @foreach (LeadStatusType status in Enum.GetValues(typeof(LeadStatusType)))
                                {
                                    <option value="@status" selected="@(status == lead.CurrentStatus)">@GetStatusDisplayName(status)</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-info">Update Status</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Follow-up Modal -->
    <div class="modal fade" id="followupModal-@lead.Id" tabindex="-1" aria-labelledby="followupModalLabel-@lead.Id" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content rounded-lg shadow-lg">
                <div class="modal-header bg-gradient-success text-white">
                    <h5 class="modal-title" id="followupModalLabel-@lead.Id">Follow-ups for @lead.ClientName</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-8">
                            <div class="timeline">
                                @if (Model.LeadFeedbacks.ContainsKey(lead.Id) && Model.LeadFeedbacks[lead.Id].Any())
                                {
                                    foreach (var feedback in Model.LeadFeedbacks[lead.Id].OrderByDescending(f => f.CreatedAt))
                                    {
                                        <div class="timeline-item mb-3 animate__animated animate__fadeInUp">
                                            <div class="timeline-icon bg-@GetStatusColor(feedback.Status)">
                                                <i class="fa-solid @GetStatusIcon(feedback.Status) text-white"></i>
                                            </div>
                                            <div class="timeline-content border rounded p-3 bg-light shadow-sm">
                                                <div class="d-flex justify-content-between">
                                                    <h6 class="mb-1">@feedback.Sales?.FullName</h6>
                                                    <small class="text-muted">@feedback.CreatedAt.ToString("MMM dd, yyyy hh:mm tt")</small>
                                                </div>
                                                <p class="mb-1"><strong>Status:</strong> <span class="badge bg-@GetStatusColor(feedback.Status)">@GetStatusDisplayName(feedback.Status)</span></p>
                                                <p class="mb-0">@feedback.Comment</p>
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="text-center py-4">
                                        <i class="fa-solid fa-comment-slash fa-2x text-muted mb-3"></i>
                                        <p class="text-muted">No follow-ups found</p>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card border-success shadow-sm">
                                <div class="card-header bg-success text-white">
                                    <h6 class="mb-0">Add New Follow-up</h6>
                                </div>
                                <div class="card-body">
                                    <form asp-controller="Admin" asp-action="AddFollowUp" method="post">
                                        <input type="hidden" name="leadId" value="@lead.Id" />
                                        <div class="mb-3">
                                            <label class="form-label">Status:</label>
                                            <select class="form-select select2-modal" name="status">
                                                @foreach (LeadStatusType status in Enum.GetValues(typeof(LeadStatusType)))
                                                {
                                                    <option value="@status">@GetStatusDisplayName(status)</option>
                                                }
                                            </select>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Notes:</label>
                                            <textarea class="form-control" name="followUpNotes" rows="5" required></textarea>
                                        </div>
                                        <button type="submit" class="btn btn-success w-100">
                                            <i class="fa-solid fa-floppy-disk me-2"></i> Save Follow-up
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- History Modal -->
    <div class="modal fade" id="historyModal-@lead.Id" tabindex="-1" aria-labelledby="historyModalLabel-@lead.Id" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content rounded-lg shadow-lg">
                <div class="modal-header bg-gradient-secondary text-white">
                    <h5 class="modal-title" id="historyModalLabel-@lead.Id">Lead History</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @if (Model.AssignmentHistories.ContainsKey(lead.Id) && Model.AssignmentHistories[lead.Id].Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>From</th>
                                        <th>To</th>
                                        <th>Changed By</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var history in Model.AssignmentHistories[lead.Id])
                                    {
                                        <tr>
                                            <td>@history.ChangedAt.ToString("g")</td>
                                            <td>@(history.FromSales?.FullName ?? "Unassigned")</td>
                                            <td>@(history.ToSales?.FullName ?? "Unassigned")</td>
                                            <td>@history.ChangedBy?.FullName</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">No history available for this lead.</div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@functions {
    string GetStatusBadgeClass(LeadStatusType status)
    {
        return status switch
        {
            LeadStatusType.New => "badge-new",
            LeadStatusType.NoAnswer => "badge-noanswer",
            LeadStatusType.FollowUp => "badge-followup",
            LeadStatusType.Busy => "badge-busy",
            LeadStatusType.Canceled => "badge-cancel",
            LeadStatusType.DoneDeal => "badge-donedeal",
            LeadStatusType.NotInterested => "badge-notinterested",
            LeadStatusType.WrongNumber => "badge-wrongnumber",
            LeadStatusType.Closed => "badge-closed",
            LeadStatusType.Potential => "badge-potential",
            LeadStatusType.NoBudget => "badge-notinterested",
            _ => status switch
            {
                _ => ""
            }
        };
    }

    string GetStatusDisplayName(LeadStatusType status)
    {
        return status switch
        {
            LeadStatusType.New => "New Lead",
            LeadStatusType.NoAnswer => "No Answer",
            LeadStatusType.FollowUp => "Follow Up",
            LeadStatusType.Busy => "Busy",
            LeadStatusType.Canceled => "Canceled",
            LeadStatusType.DoneDeal => "Done Deal",
            LeadStatusType.NotInterested => "Not Interested",
            LeadStatusType.WrongNumber => "Wrong Number",
            LeadStatusType.Closed => "Closed",
            LeadStatusType.Potential => "Potential",
            LeadStatusType.NoBudget => "No Budget",
            _ => status switch
            {
                _ => ""
            }
        };
    }

    string GetStatusColor(LeadStatusType status)
    {
        return status switch
        {
            LeadStatusType.New => "primary",
            LeadStatusType.NoAnswer => "warning",
            LeadStatusType.FollowUp => "info",
            LeadStatusType.Busy => "orange",
            LeadStatusType.Canceled => "danger",
            LeadStatusType.DoneDeal => "success",
            LeadStatusType.NotInterested => "purple",
            LeadStatusType.WrongNumber => "dark",
            LeadStatusType.Closed => "secondary",
            LeadStatusType.Potential => "teal",
            LeadStatusType.NoBudget => "danger",
            _ => status switch
            {
                _ => ""
            }
        };
    }

    string GetStatusIcon(LeadStatusType status)
    {
        return status switch
        {
            LeadStatusType.New => "fa-user-plus",
            LeadStatusType.NoAnswer => "fa-phone-slash",
            LeadStatusType.FollowUp => "fa-clock",
            LeadStatusType.Busy => "fa-phone-volume",
            LeadStatusType.Canceled => "fa-xmark-circle",
            LeadStatusType.DoneDeal => "fa-check-double",
            LeadStatusType.NotInterested => "fa-thumbs-down",
            LeadStatusType.WrongNumber => "fa-circle-exclamation",
            LeadStatusType.Closed => "fa-lock",
            LeadStatusType.Potential => "fa-star",
            LeadStatusType.NoBudget => "fa-danger",
            _ => status switch
            {
                _ => ""
            }
        };
    }
}

@section Styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.4.1/css/buttons.bootstrap5.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <link rel="stylesheet" href="~/css/Admin/admin-leads.css" asp-append-version="true">
}

@section Scripts {
    <script src="~/js/Admin/admin-leads.js" asp-append-version="true"></script>
}

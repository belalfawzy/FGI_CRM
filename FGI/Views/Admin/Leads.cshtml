@using FGI.Enums
@model FGI.ViewModel.AdminLeadsViewModel
@{
    ViewData["Title"] = "Leads Management";
}

<div class="container-fluid px-0">
    <!-- Main Content Area with White Background -->
    <div class="container-fluid px-4">
        <div class="bg-gradient-primary text-primary py-3 mb-4 shadow" style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);">
            <div class="container-fluid">
                <div class="d-sm-flex align-items-center justify-content-between">
                    <h1 class="h3 mb-0">
                        <i class="fas fa-user-tie mr-2"></i> Leads Management
                    </h1>
                    <a asp-action="Create" class="btn btn-light btn-circle btn-lg shadow-sm">
                        <i class="fas fa-plus text-primary"></i>
                    </a>
                </div>
            </div>
        </div>

        <!-- Filters Card -->
        <div class="card shadow-sm mb-4 border-0">
            <div class="card-header bg-white py-3 border-bottom">
                <h6 class="m-0 font-weight-bold text-primary">
                    <i class="fas fa-filter mr-2"></i>Search Filters
                </h6>
            </div>
            <div class="card-body bg-light rounded-bottom">
                <form method="get" class="row g-3 align-items-end">
                    <!-- Search Term -->
                    <div class="col-md-3">
                        <label class="form-label small text-muted">Search</label>
                        <div class="input-group">
                            <input type="text" class="form-control" name="searchTerm" placeholder="Name or phone" value="@Model.SearchTerm">
                            <span class="input-group-text bg-white"><i class="fas fa-search"></i></span>
                        </div>
                    </div>

                    <!-- Project Filter -->
                    <div class="col-md-2">
                        <label class="form-label small text-muted">Project</label>
                        <select class="form-select" name="projectId">
                            <option value="">All Projects</option>
                            @foreach (var project in Model.Projects)
                            {
                                <option value="@project.Id" selected="@(Model.SelectedProjectId == project.Id)">@project.Name</option>
                            }
                        </select>
                    </div>

                    <!-- Sales Rep Filter -->
                    <div class="col-md-2">
                        <label class="form-label small text-muted">Sales Rep</label>
                        <select class="form-select" name="assignedToId">
                            <option value="">All Reps</option>
                            @foreach (var user in Model.SalesUsers)
                            {
                                <option value="@user.Id" selected="@(Model.SelectedSalesUserId == user.Id)">@user.FullName</option>
                            }
                        </select>
                    </div>

                    <!-- Status Filter -->
                    <div class="col-md-2">
                        <label class="form-label small text-muted">Status</label>
                        <select class="form-select" name="status">
                            <option value="">All Statuses</option>
                            @foreach (LeadStatusType status in Enum.GetValues(typeof(LeadStatusType)))
                            {
                                <option value="@status" selected="@(Model.SelectedStatus?.ToString() == status.ToString())">
                                    @GetStatusDisplayName(status)
                                </option>
                            }
                        </select>
                    </div>

                    <!-- Date Filter -->
                    <div class="col-md-2">
                        <label class="form-label small text-muted">Date</label>
                        <input type="date" class="form-control" name="filterDate" value="@Model.FilterDate?.ToString("yyyy-MM-dd")">
                    </div>

                    <!-- Action Buttons -->
                    <div class="col-md-1 d-flex align-items-end">
                        <div class="d-grid gap-2 w-100">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-filter"></i>
                            </button>
                            <a href="@Url.Action("Leads")" class="btn btn-outline-secondary">
                                <i class="fas fa-sync-alt"></i>
                            </a>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <!-- Leads Table -->
        <div class="card shadow-sm border-0">
            <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center border-bottom">
                <h6 class="m-0 font-weight-bold text-primary">
                    <i class="fas fa-list mr-2"></i>All Leads
                </h6>
                <span class="badge bg-primary rounded-pill">@Model.Leads.Count records</span>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0" id="leadsTable">
                        <thead class="bg-light">
                            <tr>
                                <th>Client</th>
                                <th>Contact</th>
                                <th>Project</th>
                                <th>UnitCode</th>
                                <th>Status</th>
                                <th>Created by</th>
                                <th>Assigned To</th>
                                <th>Last Updated</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var lead in Model.Leads)
                            {
                                <tr>
                                    <td>
                                        <strong>@lead.ClientName</strong>
                                        <div class="small text-muted">Created: @lead.CreatedAt.ToString("dd MMM yyyy")</div>
                                    </td>
                                    <td>@lead.ClientPhone</td>
                                    <td>@lead.Project?.Name</td>
                                    <td>@lead.Unit?.UnitCode</td>
                                    <td>
                                        <span class="badge @GetStatusBadgeClass(lead.CurrentStatus)">
                                            @GetStatusDisplayName(lead.CurrentStatus)
                                        </span>
                                    </td>
                                    <td>@lead.CreatedBy.FullName</td>
                                    <td>
                                        @if (lead.AssignedTo != null)
                                        {
                                            <span>@lead.AssignedTo.FullName</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Unassigned</span>
                                        }
                                    </td>
                                    <td>@lead.UpdatedAt.ToString()</td>
                                    <td class="text-end">
                                        <div class="btn-group" role="group">
                                            <!-- Add this new Details button -->
                                            <a asp-action="LeadDetails" asp-route-id="@lead.Id"
                                               class="btn btn-sm btn-outline-dark" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <!-- Assign Button -->
                                            <button type="button" class="btn btn-sm btn-outline-primary"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#assignModal-@lead.Id"
                                                    title="Assign">
                                                <i class="fas fa-user-edit"></i>
                                            </button>

                                            <!-- Status Button -->
                                            <button type="button" class="btn btn-sm btn-outline-info"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#statusModal-@lead.Id"
                                                    title="Change Status">
                                                <i class="fas fa-flag"></i>
                                            </button>

                                            <!-- Follow-up Button -->
                                            <button type="button" class="btn btn-sm btn-outline-success position-relative"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#followupModal-@lead.Id"
                                                    title="Follow-ups">
                                                <i class="fas fa-comment-dots"></i>
                                                @if (Model.LeadFeedbacks.ContainsKey(lead.Id) && Model.LeadFeedbacks[lead.Id].Count > 0)
                                                {
                                                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-success">
                                                        @Model.LeadFeedbacks[lead.Id].Count
                                                    </span>
                                                }
                                            </button>

                                            <!-- History Button -->
                                            <button type="button" class="btn btn-sm btn-outline-secondary"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#historyModal-@lead.Id"
                                                    title="History">
                                                <i class="fas fa-history"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modals for each lead -->
@foreach (var lead in Model.Leads)
{
    <!-- Assign Modal -->
    <div class="modal fade" id="assignModal-@lead.Id" tabindex="-1" aria-labelledby="assignModalLabel-@lead.Id" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="assignModalLabel-@lead.Id">Assign Lead</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-controller="Admin" asp-action="AssignLead" method="post">
                    <div class="modal-body">
                        <input type="hidden" name="leadId" value="@lead.Id" />
                        <div class="mb-3">
                            <label class="form-label">Assign to:</label>
                            <select class="form-select" name="salesUserId" required>
                                <option value="">-- Select Sales Rep --</option>
                                @foreach (var user in Model.SalesUsers)
                                {
                                    <option value="@user.Id">@user.FullName</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Assign</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Status Modal -->
    <div class="modal fade" id="statusModal-@lead.Id" tabindex="-1" aria-labelledby="statusModalLabel-@lead.Id" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-info text-white">
                    <h5 class="modal-title" id="statusModalLabel-@lead.Id">Change Lead Status</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-controller="Admin" asp-action="UpdateLeadStatus" method="post">
                    <div class="modal-body">
                        <input type="hidden" name="leadId" value="@lead.Id" />
                        <div class="mb-3">
                            <label class="form-label">New Status:</label>
                            <select class="form-select" name="status" required>
                                @foreach (LeadStatusType status in Enum.GetValues(typeof(LeadStatusType)))
                                {
                                    <option value="@status" selected="@(status == lead.CurrentStatus)">@GetStatusDisplayName(status)</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-info">Update Status</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Follow-up Modal -->
    <div class="modal fade" id="followupModal-@lead.Id" tabindex="-1" aria-labelledby="followupModalLabel-@lead.Id" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title" id="followupModalLabel-@lead.Id">Follow-ups for @lead.ClientName</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-8">
                            <!-- Follow-ups List -->
                            <div class="timeline">
                                @if (Model.LeadFeedbacks.ContainsKey(lead.Id) && Model.LeadFeedbacks[lead.Id].Any())
                                {
                                    foreach (var feedback in Model.LeadFeedbacks[lead.Id].OrderByDescending(f => f.CreatedAt))
                                    {
                                        <div class="timeline-item mb-3">
                                            <div class="timeline-icon bg-@GetStatusColor(feedback.Status)">
                                                <i class="fas @GetStatusIcon(feedback.Status) text-white"></i>
                                            </div>
                                            <div class="timeline-content border rounded p-3">
                                                <div class="d-flex justify-content-between">
                                                    <h6 class="mb-1">@feedback.Sales?.FullName</h6>
                                                    <small class="text-muted">@feedback.CreatedAt.ToString("MMM dd, yyyy hh:mm tt")</small>
                                                </div>
                                                <p class="mb-1"><strong>Status:</strong> <span class="badge bg-@GetStatusColor(feedback.Status)">@feedback.Status</span></p>
                                                <p class="mb-0">@feedback.Comment</p>
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="text-center py-4">
                                        <i class="fas fa-comment-slash fa-2x text-muted mb-3"></i>
                                        <p class="text-muted">No follow-ups found</p>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="col-md-4">
                            <!-- Add New Follow-up Form -->
                            <div class="card border-success">
                                <div class="card-header bg-success text-white">
                                    <h6 class="mb-0">Add New Follow-up</h6>
                                </div>
                                <div class="card-body">
                                    <form asp-controller="Admin" asp-action="AddFollowUp" method="post">
                                        <input type="hidden" name="leadId" value="@lead.Id" />
                                        <div class="mb-3">
                                            <label class="form-label">Status:</label>
                                            <select class="form-select" name="status">
                                                @foreach (LeadStatusType status in Enum.GetValues(typeof(LeadStatusType)))
                                                {
                                                    <option value="@status">@GetStatusDisplayName(status)</option>
                                                }
                                            </select>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Notes:</label>
                                            <textarea class="form-control" name="followUpNotes" rows="5" required></textarea>
                                        </div>
                                        <button type="submit" class="btn btn-success w-100">
                                            <i class="fas fa-save me-2"></i>Save Follow-up
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- History Modal -->
    <div class="modal fade" id="historyModal-@lead.Id" tabindex="-1" aria-labelledby="historyModalLabel-@lead.Id" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-secondary text-white">
                    <h5 class="modal-title" id="historyModalLabel-@lead.Id">Lead History</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @if (Model.AssignmentHistories.ContainsKey(lead.Id) && Model.AssignmentHistories[lead.Id].Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>From</th>
                                        <th>To</th>
                                        <th>Changed By</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var history in Model.AssignmentHistories[lead.Id])
                                    {
                                        <tr>
                                            <td>@history.ChangedAt.ToString("g")</td>
                                            <td>@(history.FromSales?.FullName ?? "Unassigned")</td>
                                            <td>@(history.ToSales?.FullName ?? "Unassigned")</td>
                                            <td>@history.ChangedBy?.FullName</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">No history available for this lead.</div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@functions {
    string GetStatusBadgeClass(LeadStatusType status)
    {
        return status switch
        {
            LeadStatusType.New => "bg-blue",
            LeadStatusType.NoAnswer => "bg-gray",
            LeadStatusType.FollowUp => "bg-yellow",
            LeadStatusType.Busy => "bg-orange",
            LeadStatusType.Canceled => "bg-red",
            LeadStatusType.DoneDeal => "bg-green",
            LeadStatusType.NotInterested => "bg-purple",
            LeadStatusType.WrongNumber => "bg-dark",
            LeadStatusType.Closed => "bg-secondary",
            _ => "bg-light text-dark"
        };
    }

    string GetStatusDisplayName(LeadStatusType status)
    {
        return status switch
        {
            LeadStatusType.New => "New Lead",
            LeadStatusType.NoAnswer => "No Answer",
            LeadStatusType.FollowUp => "Follow Up",
            LeadStatusType.Busy => "Busy",
            LeadStatusType.Canceled => "Canceled",
            LeadStatusType.DoneDeal => "Done Deal",
            LeadStatusType.NotInterested => "Not Interested",
            LeadStatusType.WrongNumber => "Wrong Number",
            LeadStatusType.Closed => "Closed",
            _ => status.ToString()
        };
    }

    string GetStatusColor(LeadStatusType status)
    {
        return status switch
        {
            LeadStatusType.New => "primary",
            LeadStatusType.NoAnswer => "warning",
            LeadStatusType.FollowUp => "secondary",
            LeadStatusType.Busy => "orange",
            LeadStatusType.Canceled => "danger",
            LeadStatusType.DoneDeal => "success",
            LeadStatusType.NotInterested => "purple",
            LeadStatusType.WrongNumber => "dark",
            LeadStatusType.Closed => "secondary",
            _ => "light"
        };
    }

    string GetStatusIcon(LeadStatusType status)
    {
        return status switch
        {
            LeadStatusType.New => "fa-user-plus",
            LeadStatusType.NoAnswer => "fa-phone-slash",
            LeadStatusType.FollowUp => "fa-clock",
            LeadStatusType.Busy => "fa-phone-alt",
            LeadStatusType.Canceled => "fa-times-circle",
            LeadStatusType.DoneDeal => "fa-check-double",
            LeadStatusType.NotInterested => "fa-thumbs-down",
            LeadStatusType.WrongNumber => "fa-exclamation-circle",
            LeadStatusType.Closed => "fa-lock",
            _ => "fa-info-circle"
        };
    }
}

@section Styles {
    <style>
        .page-header {
            background: linear-gradient(135deg, #4e73df 0%, #224abe 100%);
            margin-left: -1.5rem;
            margin-right: -1.5rem;
        }

        .bg-blue {
            background-color: #4e73df;
        }

        .bg-gray {
            background-color: #858796;
        }

        .bg-yellow {
            background-color: #f6c23e;
            color: #000;
        }

        .bg-orange {
            background-color: #fd7e14;
        }

        .bg-red {
            background-color: #e74a3b;
        }

        .bg-green {
            background-color: #1cc88a;
        }

        .bg-purple {
            background-color: #6f42c1;
        }

        .bg-dark {
            background-color: #5a5c69;
        }

        #leadsTable th {
            text-transform: uppercase;
            font-size: 0.75rem;
            letter-spacing: 0.5px;
            padding: 1rem;
            border-bottom: 2px solid #e3e6f0;
        }

        #leadsTable td {
            padding: 0.75rem 1rem;
            vertical-align: middle;
            border-top: 1px solid #f8f9fc;
        }

        #leadsTable tr:hover {
            background-color: #f8f9fc;
        }

        .btn-group .btn {
            position: relative;
        }

        .badge {
            font-weight: 500;
            padding: 0.35em 0.65em;
            font-size: 0.75em;
        }

        .modal-header {
            padding: 1rem 1.5rem;
        }

        .modal-footer {
            padding: 0.75rem 1.5rem;
        }

        .timeline {
            position: relative;
            padding-left: 50px;
        }

        .timeline-item {
            position: relative;
            padding-bottom: 15px;
        }

        .timeline-icon {
            position: absolute;
            left: -40px;
            top: 0;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1;
        }

        .timeline-content {
            position: relative;
            padding: 15px;
            background-color: #f8f9fa;
            border-radius: 6px;
            margin-bottom: 10px;
            border: 1px solid #e9ecef;
        }

        .bg-primary {
            background-color: #4e73df !important;
        }

        .bg-secondary {
            background-color: #858796 !important;
        }

        .bg-success {
            background-color: #1cc88a !important;
        }

        .bg-info {
            background-color: #36b9cc !important;
        }

        .bg-warning {
            background-color: #f6c23e !important;
        }

        .bg-danger {
            background-color: #e74a3b !important;
        }

        .bg-purple {
            background-color: #6f42c1 !important;
        }

        .bg-dark {
            background-color: #5a5c69 !important;
        }

        .bg-orange {
            background-color: #fd7e14 !important;
        }
    </style>
}

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/lib/datatables/js/dataTables.bootstrap5.min.js"></script>
    <script src="~/lib/toastr.js/toastr.min.js"></script>

    <script>
        $(document).ready(function() {
            $('#leadsTable').DataTable({
                responsive: true,
                order: [[6, 'desc']],
                dom: '<"top"f>rt<"bottom"lip><"clear">',
                language: {
                    search: "_INPUT_",
                    searchPlaceholder: "Search leads...",
                },
                columnDefs: [
                    { orderable: false, targets: [7] }
                ]
            });

            // Initialize tooltips
            $('[title]').tooltip();

            // Show success/error messages from TempData
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                    toastr.success('@Html.Raw(TempData["SuccessMessage"])');
            </text>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                    toastr.error('@Html.Raw(TempData["ErrorMessage"])');
            </text>
        }
        });
    </script>
    </script>
}
@model List<Lead>
@{
    ViewData["Title"] = "Unassigned Leads";
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
}

<div class="container-fluid">
    <div class="card shadow-lg border-0 rounded-3">
        <div class="card-header bg-gradient-primary py-3 d-flex justify-content-between align-items-center">
            <h4 class="m-0 font-weight-bold text-white">
                <i class="fas fa-users me-2"></i>Unassigned Leads
                <span class="badge bg-light text-primary ms-2 fs-6">@Model.Count</span>
            </h4>
            <div>
                <button type="button" class="btn btn-light btn-sm me-2" data-bs-toggle="modal" data-bs-target="#helpModal">
                    <i class="fas fa-question-circle me-1"></i> Help
                </button>
                <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#distributeModal">
                    <i class="fas fa-share-alt me-2"></i> Distribute Leads
                </button>
            </div>
        </div>
        <div class="card-body">
            <!-- Filters and Search -->
            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" id="searchInput" class="form-control" placeholder="Search by client name or phone...">
                        <button class="btn btn-outline-secondary" type="button" id="clearSearch">Clear</button>
                    </div>
                </div>
                <div class="col-md-6 d-flex justify-content-end">
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-primary dropdown-toggle" data-bs-toggle="dropdown">
                            <i class="fas fa-filter me-1"></i> Filter
                        </button>
                        <div class="dropdown-menu dropdown-menu-end p-3" style="width: 250px;">
                            <h6 class="dropdown-header">Filter Options</h6>
                            <div class="mb-2">
                                <label class="form-label small">By Project</label>
                                <select class="form-select form-select-sm" id="projectFilter">
                                    <option value="">All Projects</option>
                                    @if (ViewBag.Projects != null)
                                    {
                                        foreach (var project in ViewBag.Projects)
                                        {
                                            <option value="@project.Name">@project.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="mb-2">
                                <label class="form-label small">By Date</label>
                                <select class="form-select form-select-sm" id="dateFilter">
                                    <option value="">All Dates</option>
                                    <option value="today">Today</option>
                                    <option value="week">This Week</option>
                                    <option value="month">This Month</option>
                                </select>
                            </div>
                            <hr class="dropdown-divider">
                            <button class="btn btn-secondary btn-sm w-100" id="resetFilters">Reset Filters</button>
                        </div>
                    </div>
                </div>
            </div>

            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover" id="leadsTable">
                        <thead class="table-light">
                            <tr>
                                <th class="ps-4">
                                    <input class="form-check-input" type="checkbox" id="selectAll">
                                </th>
                                <th>Client <i class="fas fa-sort ms-1"></i></th>
                                <th>Contact Info</th>
                                <th>Project & Unit</th>
                                <th>Status & Source</th>
                                <th>Created <i class="fas fa-sort ms-1"></i></th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var lead in Model)
                            {
                                <tr>
                                    <td class="ps-4">
                                        <input class="form-check-input lead-checkbox" type="checkbox" value="@lead.Id">
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="avatar-circle-sm bg-primary text-white me-3">
                                                @lead.ClientName[0]
                                            </div>
                                            <div>
                                                <div class="fw-bold">@lead.ClientName</div>
                                                <div class="text-muted small">ID: @lead.Id.ToString().Substring(0, Math.Min(8, lead.Id.ToString().Length))</div>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div><i class="fas fa-phone me-2 text-muted"></i> @lead.ClientPhone</div>
                                        @if (!string.IsNullOrEmpty(lead.Comment))
                                        {
                                            <div class="mt-1 small text-truncate" style="max-width: 200px;" title="@lead.Comment">
                                                <i class="fas fa-comment me-2 text-muted"></i> @lead.Comment
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        @if (lead.Project != null)
                                        {
                                            <div class="fw-medium">@lead.Project.Name</div>
                                        }
                                        else
                                        {
                                            <div class="text-muted">No Project</div>
                                        }
                                        @if (lead.UnitId.HasValue)
                                        {
                                            <div class="text-muted small">Unit ID: @lead.UnitId</div>
                                        }
                                    </td>
                                    <td>
                                        <span class="badge bg-warning text-dark"><i class="fas fa-clock me-1"></i> Unassigned</span>
                                        <div class="mt-1 small">
                                            <div><i class="fas fa-tag me-1 text-muted"></i> @lead.CurrentStatus</div>
                                        </div>
                                    </td>
                                    <td>
                                        <div>@lead.CreatedAt.ToString("MMM dd, yyyy")</div>
                                        <div class="text-muted small">@lead.CreatedAt.ToString("h:mm tt")</div>
                                        @if (lead.UpdatedAt.HasValue)
                                        {
                                            <div class="text-muted small">Updated: @lead.UpdatedAt.Value.ToString("MMM dd")</div>
                                        }
                                    </td>
                                    <td>
                                        <div class="d-flex flex-column gap-2">
                                            <form asp-action="AssignLeadFromTasks" method="post" class="assign-form">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="leadId" value="@lead.Id" />
                                                <div class="input-group input-group-sm">
                                                    <select name="salesUserId" class="form-select form-select-sm">
                                                        <option value="">Select agent</option>
                                                        @if (ViewBag.SalesUsers != null)
                                                        {
                                                            foreach (var user in ViewBag.SalesUsers)
                                                            {
                                                                <option value="@user.Id">@user.FullName</option>
                                                            }
                                                        }
                                                    </select>
                                                    <button type="submit" class="btn btn-primary btn-sm">
                                                        <i class="fas fa-user-check"></i>
                                                    </button>
                                                </div>
                                            </form>
                                            <div class="d-flex gap-1">
                                                <a asp-action="LeadDetails" asp-route-id="@lead.Id" class="btn btn-sm btn-outline-secondary">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <button class="btn btn-sm btn-outline-info view-comment" data-comment="@lead.Comment">
                                                    <i class="fas fa-comment"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                <div class="d-flex justify-content-between align-items-center mt-4">
                    <div class="text-muted small">
                        Showing <span id="showingCount">@Model.Count</span> of @Model.Count leads
                    </div>
                    <nav>
                        <ul class="pagination pagination-sm">
                            <li class="page-item disabled"><a class="page-link" href="#">Previous</a></li>
                            <li class="page-item active"><a class="page-link" href="#">1</a></li>
                            <li class="page-item disabled"><a class="page-link" href="#">Next</a></li>
                        </ul>
                    </nav>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <div class="py-5">
                        <i class="fas fa-users fa-3x text-muted mb-3"></i>
                        <h4 class="text-muted">No Unassigned Leads</h4>
                        <p class="text-muted">There are no unassigned leads at the moment.</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Distribute Leads Modal -->
<div class="modal fade" id="distributeModal" tabindex="-1" aria-labelledby="distributeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="distributeModalLabel">
                    <i class="fas fa-share-alt me-2"></i>Distribute Leads
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="DistributeLeads" method="post">
                <div class="modal-body">
                    <div class="alert alert-info d-flex align-items-center">
                        <i class="fas fa-info-circle me-2 fa-lg"></i>
                        <div>
                            Distribute <strong class="lead-count">@Model.Count</strong> unassigned leads among
                            <strong>@(ViewBag.SalesUsers?.Count ?? 0)</strong> sales reps.
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label fw-bold">Distribution Method</label>
                        <select name="distributionMethod" class="form-select">
                            <option value="equal">Equal Distribution</option>
                            <option value="roundrobin">Round Robin</option>
                        </select>
                    </div>

                    <div class="distribution-info">
                        @if (ViewBag.SalesUsers != null && ViewBag.SalesUsers.Count > 0)
                        {
                            <div class="alert alert-warning">
                                <i class="fas fa-calculator me-2"></i>
                                Each sales rep will receive approximately <strong>@(Model.Count / ViewBag.SalesUsers.Count)</strong> leads.
                                @if (Model.Count % ViewBag.SalesUsers.Count != 0)
                                {
                                    <span>The remaining <strong>@(Model.Count % ViewBag.SalesUsers.Count)</strong> leads will be assigned to top performers.</span>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-danger">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                No sales representatives available. Please add sales users first.
                            </div>
                        }
                    </div>

                    <div class="selected-leads-card d-none mt-3">
                        <div class="card">
                            <div class="card-header py-2">
                                <h6 class="mb-0"><i class="fas fa-check-circle me-2"></i>Selected Leads</h6>
                            </div>
                            <div class="card-body py-2">
                                <p class="mb-0 small" id="selectedLeadsCount">0 leads selected</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    @if (ViewBag.SalesUsers != null && ViewBag.SalesUsers.Count > 0)
                    {
                        <button type="submit" class="btn btn-primary">Distribute Leads</button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-primary" disabled>Distribute Leads</button>
                    }
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Comment View Modal -->
<div class="modal fade" id="commentModal" tabindex="-1" aria-labelledby="commentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title" id="commentModalLabel">
                    <i class="fas fa-comment me-2"></i>Lead Comment
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="commentText" class="p-3 bg-light rounded"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Help Modal -->
<div class="modal fade" id="helpModal" tabindex="-1" aria-labelledby="helpModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title" id="helpModalLabel">
                    <i class="fas fa-question-circle me-2"></i>Leads Management Help
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h6>How to use this page:</h6>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item px-0">
                        <i class="fas fa-check-square text-primary me-2"></i>
                        Select leads individually or use "Select All" to assign multiple leads
                    </li>
                    <li class="list-group-item px-0">
                        <i class="fas fa-user-check text-primary me-2"></i>
                        Use the dropdown to assign a single lead to a sales agent
                    </li>
                    <li class="list-group-item px-0">
                        <i class="fas fa-share-alt text-primary me-2"></i>
                        Use "Distribute Leads" to automatically assign leads to multiple agents
                    </li>
                    <li class="list-group-item px-0">
                        <i class="fas fa-search text-primary me-2"></i>
                        Use the search and filter options to find specific leads
                    </li>
                    <li class="list-group-item px-0">
                        <i class="fas fa-eye text-primary me-2"></i>
                        Click the eye icon to view lead details
                    </li>
                    <li class="list-group-item px-0">
                        <i class="fas fa-comment text-primary me-2"></i>
                        Click the comment icon to view lead comments
                    </li>
                </ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Search functionality
            const searchInput = document.getElementById('searchInput');
            const clearSearch = document.getElementById('clearSearch');
            const leadsTable = document.getElementById('leadsTable');

            if (searchInput && leadsTable) {
                searchInput.addEventListener('keyup', function() {
                    const searchText = this.value.toLowerCase();
                    const rows = leadsTable.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

                    let visibleCount = 0;
                    for (let i = 0; i < rows.length; i++) {
                        const cells = rows[i].getElementsByTagName('td');
                        let found = false;

                        for (let j = 0; j < cells.length; j++) {
                            const cellText = cells[j].textContent.toLowerCase();
                            if (cellText.indexOf(searchText) > -1) {
                                found = true;
                                break;
                            }
                        }

                        if (found) {
                            rows[i].style.display = '';
                            visibleCount++;
                        } else {
                            rows[i].style.display = 'none';
                        }
                    }

                    document.getElementById('showingCount').textContent = visibleCount;
                });

                clearSearch.addEventListener('click', function() {
                    searchInput.value = '';
                    const rows = leadsTable.getElementsByTagName('tbody')[0].getElementsByTagName('tr');
                    for (let i = 0; i < rows.length; i++) {
                        rows[i].style.display = '';
                    }
                    document.getElementById('showingCount').textContent = rows.length;
                });
            }

            // Select all functionality
            const selectAll = document.getElementById('selectAll');
            if (selectAll) {
                selectAll.addEventListener('change', function() {
                    const checkboxes = document.getElementsByClassName('lead-checkbox');
                    for (let checkbox of checkboxes) {
                        checkbox.checked = this.checked;
                    }
                    updateSelectedLeadsCount();
                });
            }

            // Update selected leads count
            function updateSelectedLeadsCount() {
                const selectedCheckboxes = document.querySelectorAll('.lead-checkbox:checked');
                const selectedCount = selectedCheckboxes.length;
                document.getElementById('selectedLeadsCount').textContent = selectedCount + ' leads selected';

                if (selectedCount > 0) {
                    document.querySelector('.selected-leads-card').classList.remove('d-none');
                } else {
                    document.querySelector('.selected-leads-card').classList.add('d-none');
                }
            }

            // Add change event to all lead checkboxes
            const leadCheckboxes = document.getElementsByClassName('lead-checkbox');
            for (let checkbox of leadCheckboxes) {
                checkbox.addEventListener('change', updateSelectedLeadsCount);
            }

            // Filter functionality
            const projectFilter = document.getElementById('projectFilter');
            const dateFilter = document.getElementById('dateFilter');
            const resetFilters = document.getElementById('resetFilters');

            if (projectFilter && dateFilter && resetFilters && leadsTable) {
                projectFilter.addEventListener('change', applyFilters);
                dateFilter.addEventListener('change', applyFilters);

                resetFilters.addEventListener('click', function() {
                    projectFilter.value = '';
                    dateFilter.value = '';
                    applyFilters();
                });
            }

            function applyFilters() {
                const projectValue = projectFilter.value.toLowerCase();
                const dateValue = dateFilter.value;
                const rows = leadsTable.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

                let visibleCount = 0;
                for (let i = 0; i < rows.length; i++) {
                    const projectCell = rows[i].cells[3]; // Project column
                    const dateCell = rows[i].cells[5]; // Date column

                    const projectText = projectCell.textContent.toLowerCase();
                    const dateText = dateCell.textContent.toLowerCase();

                    let projectMatch = projectValue === '' || projectText.includes(projectValue);
                    let dateMatch = dateValue === '' || isDateMatch(dateText, dateValue);

                    if (projectMatch && dateMatch) {
                        rows[i].style.display = '';
                        visibleCount++;
                    } else {
                        rows[i].style.display = 'none';
                    }
                }

                document.getElementById('showingCount').textContent = visibleCount;
            }

            function isDateMatch(dateString, filterType) {
                const today = new Date();
                const cellDate = new Date(dateString);

                if (filterType === 'today') {
                    return cellDate.toDateString() === today.toDateString();
                } else if (filterType === 'week') {
                    const startOfWeek = new Date(today);
                    startOfWeek.setDate(today.getDate() - today.getDay());
                    startOfWeek.setHours(0, 0, 0, 0);

                    const endOfWeek = new Date(today);
                    endOfWeek.setDate(today.getDate() + (6 - today.getDay()));
                    endOfWeek.setHours(23, 59, 59, 999);

                    return cellDate >= startOfWeek && cellDate <= endOfWeek;
                } else if (filterType === 'month') {
                    return cellDate.getMonth() === today.getMonth() &&
                           cellDate.getFullYear() === today.getFullYear();
                }

                return false;
            }

            // Comment modal functionality
            const commentModal = new bootstrap.Modal(document.getElementById('commentModal'));
            const commentText = document.getElementById('commentText');
            const viewCommentButtons = document.querySelectorAll('.view-comment');

            viewCommentButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const comment = this.getAttribute('data-comment');
                    if (comment && comment.trim() !== '') {
                        commentText.textContent = comment;
                    } else {
                        commentText.textContent = 'No comment available for this lead.';
                    }
                    commentModal.show();
                });
            });
        });
    </script>
}

<style>
    .avatar-circle-sm {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
    }

    .card-header {
        border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    }

    .table th {
        border-top: none;
        font-weight: 600;
        font-size: 0.85rem;
        text-transform: uppercase;
        color: #6c757d;
    }

    .table-hover tbody tr:hover {
        background-color: rgba(13, 110, 253, 0.05);
    }

    .assign-form .input-group {
        width: 200px;
    }

    .bg-gradient-primary {
        background: linear-gradient(135deg, #4e73df 0%, #224abe 100%);
    }

    .view-lead, .view-lead:hover {
        transition: all 0.2s ease;
    }

        .view-lead:hover {
            transform: scale(1.05);
        }
</style>
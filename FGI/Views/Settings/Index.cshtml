@model FGI.ViewModels.UserSettingsViewModel
@{
    ViewData["Title"] = "Settings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Head {
    <link rel="stylesheet" href="~/css/bootstrap-profile.css" asp-append-version="true">
}

<div class="profile-container">
    <div class="container-fluid">
        <!-- Header Section -->
        <div class="profile-header fade-in-up">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <div class="d-flex align-items-center">
                        <div class="profile-header-icon">
                            <i class="fas fa-cog"></i>
                        </div>
                        <div>
                            <h1 class="profile-header-title">Account Settings</h1>
                            <p class="profile-header-subtitle">Manage your account information and security</p>
                            <div class="profile-status">Account Active</div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Floating Elements -->
            <div class="floating-element" style="top: 20px; right: 20px; width: 60px; height: 60px; background: #007bff;"></div>
            <div class="floating-element" style="bottom: 20px; left: 20px; width: 40px; height: 40px; background: #6f42c1;"></div>
        </div>

        <!-- Settings Tabs -->
        <div class="row">
            <div class="col-12 mb-4">
                <div class="profile-card">
                    <div class="card-body">
                        <ul class="nav nav-tabs" id="settingsTabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile" type="button" role="tab">
                                    <i class="fas fa-user me-2"></i>Profile Information
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="security-tab" data-bs-toggle="tab" data-bs-target="#security" type="button" role="tab">
                                    <i class="fas fa-shield-alt me-2"></i>Security
                                </button>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <!-- Tab Content -->
        <div class="tab-content" id="settingsTabsContent">
            <!-- Profile Information Tab -->
            <div class="tab-pane fade show active" id="profile" role="tabpanel">
                <div class="row">
                    <div class="col-lg-8 mb-4">
                        <div class="profile-card">
                            <div class="card-header-primary">
                                <div class="d-flex align-items-center">
                                    <div class="card-header-icon">
                                        <i class="fas fa-user"></i>
                                    </div>
                                    <div>
                                        <h3 class="card-header-title">Personal Information</h3>
                                        <p class="card-header-subtitle">Update your personal details</p>
                                    </div>
                                </div>
                            </div>
                            <div class="card-body">
                                <form id="profileForm">
                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <label for="fullName" class="form-label fw-bold">Full Name</label>
                                            <input type="text" class="form-control" id="fullName" value="@Model.FullName" required>
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="email" class="form-label fw-bold">Email Address</label>
                                            <input type="email" class="form-control" id="email" value="@Model.Email" readonly>
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="username" class="form-label fw-bold">Username</label>
                                            <input type="text" class="form-control" id="username" value="@Model.Username" required>
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="role" class="form-label fw-bold">Role</label>
                                            <input type="text" class="form-control" id="role" value="@Model.Role" readonly>
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="userId" class="form-label fw-bold">User ID</label>
                                            <input type="text" class="form-control" id="userId" value="@Model.UserId" readonly>
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="createdAt" class="form-label fw-bold">Member Since</label>
                                            <input type="text" class="form-control" id="createdAt" value="@Model.CreatedAt.ToString("MMMM dd, yyyy")" readonly>
                                        </div>
                                    </div>
                                    <div class="d-flex gap-2">
                                        <button type="submit" class="btn btn-primary" id="updateProfileBtn">
                                            <i class="fas fa-save me-2"></i>Save Changes
                                        </button>
                                        <button type="button" class="btn btn-outline-secondary" id="resetProfileBtn">
                                            <i class="fas fa-undo me-2"></i>Reset
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-4 mb-4">
                        <div class="profile-card">
                            <div class="card-header-success">
                                <div class="d-flex align-items-center">
                                    <div class="card-header-icon">
                                        <i class="fas fa-image"></i>
                                    </div>
                                    <div>
                                        <h3 class="card-header-title">Profile Picture</h3>
                                        <p class="card-header-subtitle">Update your avatar</p>
                                    </div>
                                </div>
                            </div>
                            <div class="card-body text-center">
                                <div class="mb-3">
                                    <img src="https://via.placeholder.com/150" alt="Profile Picture" class="rounded-circle" style="width: 150px; height: 150px; object-fit: cover;">
                                </div>
                                <small class="text-muted mt-2 d-block">Profile picture feature coming soon</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Security Tab -->
            <div class="tab-pane fade" id="security" role="tabpanel">
                <div class="row">
                    <div class="col-lg-8 mb-4">
                        <div class="profile-card">
                            <div class="card-header-warning">
                                <div class="d-flex align-items-center">
                                    <div class="card-header-icon">
                                        <i class="fas fa-shield-alt"></i>
                                    </div>
                                    <div>
                                        <h3 class="card-header-title">Change Password</h3>
                                        <p class="card-header-subtitle">Update your account password</p>
                                    </div>
                                </div>
                            </div>
                            <div class="card-body">
                                <form id="passwordForm">
                                    <div class="mb-3">
                                        <label for="currentPassword" class="form-label fw-bold">Current Password</label>
                                        <div class="input-group">
                                            <input type="password" class="form-control" id="currentPassword" required>
                                            <button class="btn btn-outline-secondary" type="button" id="toggleCurrentPassword">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="newPassword" class="form-label fw-bold">New Password</label>
                                        <div class="input-group">
                                            <input type="password" class="form-control" id="newPassword" required>
                                            <button class="btn btn-outline-secondary" type="button" id="toggleNewPassword">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="confirmPassword" class="form-label fw-bold">Confirm New Password</label>
                                        <div class="input-group">
                                            <input type="password" class="form-control" id="confirmPassword" required>
                                            <button class="btn btn-outline-secondary" type="button" id="toggleConfirmPassword">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="d-flex gap-2">
                                        <button type="submit" class="btn btn-warning" id="updatePasswordBtn">
                                            <i class="fas fa-key me-2"></i>Update Password
                                        </button>
                                        <button type="button" class="btn btn-outline-secondary" id="resetPasswordBtn">
                                            <i class="fas fa-undo me-2"></i>Cancel
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-4 mb-4">
                        <div class="profile-card">
                            <div class="card-header-info">
                                <div class="d-flex align-items-center">
                                    <div class="card-header-icon">
                                        <i class="fas fa-lock"></i>
                                    </div>
                                    <div>
                                        <h3 class="card-header-title">Email Settings</h3>
                                        <p class="card-header-subtitle">Update your email username</p>
                                    </div>
                                </div>
                            </div>
                            <div class="card-body">
                                <form id="emailForm">
                                    <div class="mb-3">
                                        <label for="emailUsername" class="form-label fw-bold">Email Username</label>
                                        <input type="text" class="form-control" id="emailUsername" value="@Model.Username" required>
                                        <small class="text-muted">This will change your email address</small>
                                    </div>
                                    <div class="d-grid">
                                        <button type="submit" class="btn btn-info" id="updateEmailBtn">
                                            <i class="fas fa-envelope me-2"></i>Update Email
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// Password toggle functionality
document.getElementById('toggleCurrentPassword').addEventListener('click', function() {
    const passwordField = document.getElementById('currentPassword');
    const icon = this.querySelector('i');
    if (passwordField.type === 'password') {
        passwordField.type = 'text';
        icon.classList.remove('fa-eye');
        icon.classList.add('fa-eye-slash');
    } else {
        passwordField.type = 'password';
        icon.classList.remove('fa-eye-slash');
        icon.classList.add('fa-eye');
    }
});

document.getElementById('toggleNewPassword').addEventListener('click', function() {
    const passwordField = document.getElementById('newPassword');
    const icon = this.querySelector('i');
    if (passwordField.type === 'password') {
        passwordField.type = 'text';
        icon.classList.remove('fa-eye');
        icon.classList.add('fa-eye-slash');
    } else {
        passwordField.type = 'password';
        icon.classList.remove('fa-eye-slash');
        icon.classList.add('fa-eye');
    }
});

document.getElementById('toggleConfirmPassword').addEventListener('click', function() {
    const passwordField = document.getElementById('confirmPassword');
    const icon = this.querySelector('i');
    if (passwordField.type === 'password') {
        passwordField.type = 'text';
        icon.classList.remove('fa-eye');
        icon.classList.add('fa-eye-slash');
    } else {
        passwordField.type = 'password';
        icon.classList.remove('fa-eye-slash');
        icon.classList.add('fa-eye');
    }
});

// Profile form submission
$document.getElementById('profileForm').addEventListener('submit', function(e) {
    e.preventDefault();
    const fullName = document.getElementById('fullName').value;
    
    fetch('@Url.Action("UpdateProfile", "Settings")', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
        },
        body: `fullName=${encodeURIComponent(fullName)}`
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showAlert('success', data.message);
        } else {
            showAlert('danger', data.message);
        }
    })
    .catch(error => {
        showAlert('danger', 'Error updating profile');
    });
});

<script src="~/js/Settings/PasswordValidation.js"></script>

// Password form submission
document.getElementById('passwordForm').addEventListener('submit', function(e) {
    e.preventDefault();
    const currentPassword = document.getElementById('currentPassword').value;
    const newPassword = document.getElementById('newPassword').value;
    const confirmPassword = document.getElementById('confirmPassword').value;
    
    if (newPassword !== confirmPassword) {
        showAlert('danger', 'New passwords do not match');
        return;
    }
    
    if (!validatePassword(newPassword)) {
        showAlert('danger', 'Password must be at least 8 characters with 1 number, 1 uppercase, 1 lowercase, and 1 special character.');
        return;
    }
    
    fetch('@Url.Action("UpdatePassword", "Settings")', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
        },
        body: `currentPassword=${encodeURIComponent(currentPassword)}&newPassword=${encodeURIComponent(newPassword)}`
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showAlert('success', data.message);
            document.getElementById('passwordForm').reset();
        } else {
            showAlert('danger', data.message);
        }
    })
    .catch(error => {
        showAlert('danger', 'Error updating password');
    });
});

// Email form submission
document.getElementById('emailForm').addEventListener('submit', function(e) {
    e.preventDefault();
    const username = document.getElementById('emailUsername').value;
    
    fetch('@Url.Action("UpdateEmail", "Settings")', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
        },
        body: `username=${encodeURIComponent(username)}`
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showAlert('success', data.message);
        } else {
            showAlert('danger', data.message);
        }
    })
    .catch(error => {
        showAlert('danger', 'Error updating email');
    });
});

// Reset buttons
document.getElementById('resetProfileBtn').addEventListener('click', function() {
    document.getElementById('profileForm').reset();
});

document.getElementById('resetPasswordBtn').addEventListener('click', function() {
    document.getElementById('passwordForm').reset();
});

// Show alert function
function showAlert(type, message) {
    const alertDiv = document.createElement('div');
    alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
    alertDiv.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    
    const container = document.querySelector('.profile-container .container-fluid');
    container.insertBefore(alertDiv, container.firstChild);
    
    setTimeout(() => {
        alertDiv.remove();
    }, 5000);
}
</script>